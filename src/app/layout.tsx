"use client";

// import "./globals.css";
import "@mantine/core/styles.css";
import 'mantine-react-table/styles.css';
import {
    ColorSchemeScript,
    Flex,
    MantineProvider,
    mantineHtmlProps,
    rem,
} from "@mantine/core";

import { useState } from "react";
import { Text } from "@mantine/core";
import classes from "./NavbarSegmented.module.css";
import Link from "next/link";
import { AppShell, Burger } from "@mantine/core";
import { useDisclosure } from "@mantine/hooks";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { ModalsProvider } from "@mantine/modals";
import ActionToggle from "./components/actionToggle";
// export const metadata: Metadata = {
//     title: "Create Next App",
//     description: "Generated by create next app",
// };

const tabs = [
    { link: "/grid/modal", label: "modal" },
    { link: "/grid/inline", label: "inline" },
];

const queryClient = new QueryClient();

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    const [opened, { toggle }] = useDisclosure();
    const [active, setActive] = useState("");
    return (
        <html lang="en" {...mantineHtmlProps}>
            <head>
                <ColorSchemeScript />
            </head>
            <body>
                <QueryClientProvider client={queryClient}>
                    <MantineProvider>
                        <ModalsProvider>
                            <AppShell
                                navbar={{
                                    width: 200,
                                    breakpoint: "sm",
                                    collapsed: { mobile: !opened },
                                }}
                                header={{
                                    height: "auto",
                                }}
                                padding="md"
                            >
                                <AppShell.Header>
                                    <Flex
                                        p="10px 20px"
                                        align={"center"}
                                        justify={"flex-end"}
                                    >
                                        <ActionToggle />
                                    </Flex>
                                </AppShell.Header>

                                <AppShell.Navbar p="md">
                                    <nav className={classes.navbar}>
                                        <div>
                                            <Text
                                                fw={500}
                                                size="sm"
                                                className={classes.title}
                                                c="dimmed"
                                                mb="xs"
                                            >
                                                메뉴
                                            </Text>
                                        </div>

                                        <div className={classes.navbarMain}>
                                            {tabs.map((item) => (
                                                <Link
                                                    className={classes.link}
                                                    data-active={
                                                        item.label === active ||
                                                        undefined
                                                    }
                                                    href={item.link}
                                                    key={item.label}
                                                    onClick={(event) => {
                                                        setActive(item.label);
                                                    }}
                                                >
                                                    <span>{item.label}</span>
                                                </Link>
                                            ))}
                                        </div>
                                    </nav>
                                </AppShell.Navbar>

                                <AppShell.Main
                                    pt={`calc(${rem(60)} + var(--mantine-spacing-md))`}
                                >
                                    {children}
                                </AppShell.Main>
                            </AppShell>
                        </ModalsProvider>
                    </MantineProvider>
                </QueryClientProvider>
            </body>
        </html>
    );
}
